<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="13" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-02-17T14:50:13 ART" name="MYXfitness Regression Test" finished-at="2021-02-17T14:52:46 ART" duration-ms="152067">
    <groups>
    </groups>
    <test started-at="2021-02-17T14:50:13 ART" name="MYXfitness Resgression Test Classes" finished-at="2021-02-17T14:52:46 ART" duration-ms="152067">
      <class name="testCases.LogInCases">
        <test-method is-config="true" signature="startConnection()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:05 ART" name="startConnection" finished-at="2021-02-17T14:50:13 ART" duration-ms="8129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startConnection -->
        <test-method is-config="true" signature="goToLoginScreen()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:13 ART" name="goToLoginScreen" finished-at="2021-02-17T14:50:13 ART" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goToLoginScreen -->
        <test-method signature="invalidEmail()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:14 ART" name="invalidEmail" description="Invalid login scenario with a wrong email." finished-at="2021-02-17T14:50:23 ART" duration-ms="9679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method signature="invalidPassword()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:23 ART" name="invalidPassword" description="Invalid login scenario with a wrong password." finished-at="2021-02-17T14:50:28 ART" duration-ms="4666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method signature="noEmailAndPassword()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:28 ART" name="noEmailAndPassword" description="Invalid login scenario with an empty email and password." finished-at="2021-02-17T14:50:31 ART" duration-ms="3048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noEmailAndPassword -->
        <test-method signature="passwordRecoveryEmpty()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:31 ART" name="passwordRecoveryEmpty" description="Customer wants to reset the password, but entered no email." finished-at="2021-02-17T14:50:35 ART" duration-ms="3537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordRecoveryEmpty -->
        <test-method signature="passwordRecoveryWrongEmail()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:35 ART" name="passwordRecoveryWrongEmail" description="Customer wants to reset the password, but entered an invalid email." finished-at="2021-02-17T14:50:42 ART" duration-ms="7015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordRecoveryWrongEmail -->
        <test-method signature="passwordRecoveryzValid()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:42 ART" name="passwordRecoveryzValid" description="Customer wants to reset the password, but entered no email." finished-at="2021-02-17T14:50:47 ART" duration-ms="5153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordRecoveryzValid -->
        <test-method signature="validEmailAndPassword()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:50:47 ART" name="validEmailAndPassword" description="Valid login scenario with a valid email and password." finished-at="2021-02-17T14:51:03 ART" duration-ms="16293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validEmailAndPassword -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:testCases.LogInCases@6edc4161]" started-at="2021-02-17T14:52:46 ART" name="TearDown" finished-at="2021-02-17T14:52:46 ART" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
      </class> <!-- testCases.LogInCases -->
      <class name="testCases.HomeMenuCases">
        <test-method signature="openMenu()[pri:0, instance:testCases.HomeMenuCases@5486887b]" started-at="2021-02-17T14:51:03 ART" name="openMenu" description="Open Menu functionality" finished-at="2021-02-17T14:51:05 ART" duration-ms="1537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openMenu -->
        <test-method signature="openManageProfiles()[pri:1, instance:testCases.HomeMenuCases@5486887b]" started-at="2021-02-17T14:51:05 ART" name="openManageProfiles" description="Open Manage Profiles" finished-at="2021-02-17T14:51:14 ART" duration-ms="9491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openManageProfiles -->
        <test-method signature="editManageProfiles()[pri:2, instance:testCases.HomeMenuCases@5486887b]" started-at="2021-02-17T14:51:14 ART" name="editManageProfiles" description="Edit Manage Profiles" finished-at="2021-02-17T14:52:01 ART" duration-ms="46765" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testCases.HomeMenuCases.editManageProfiles(HomeMenuCases.java:193)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editManageProfiles -->
        <test-method signature="editManageProfilesBack()[pri:3, instance:testCases.HomeMenuCases@5486887b]" started-at="2021-02-17T14:52:01 ART" name="editManageProfilesBack" description="Edit Manage Profiles" finished-at="2021-02-17T14:52:46 ART" duration-ms="44703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editManageProfilesBack -->
      </class> <!-- testCases.HomeMenuCases -->
    </test> <!-- MYXfitness Resgression Test Classes -->
  </suite> <!-- MYXfitness Regression Test -->
</testng-results>
